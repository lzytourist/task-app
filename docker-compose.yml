version: '3.9'

services:
  backend:
    build: ./task-man
    container_name: task_backend
#    entrypoint: ["/entrypoint.sh"]
#    command: daphne -b 0.0.0.0 -p 8000 system.asgi:application
#    command: bash -c "python manage.py migrate && python manage.py setup && python manage.py runserver 0.0.0.0:8000"
#    command: bash -c "python manage.py runserver 0.0.0.0:8000"
    command: sh -c "if [ \"$RUN_MIGRATIONS\" = 'true' ]; then python manage.py migrate && python manage.py setup; fi && python manage.py runserver 0.0.0.0:8000"
#    volumes:
#      - ./task-man:/app
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis

  celery:
    build: ./task-man
    container_name: task_celery
    command: celery -A system worker --loglevel=info
    volumes:
      - ./task-man:/app
    env_file:
      - .env
    depends_on:
      - backend
      - redis
      - db

#  celery-beat:
#    build: ./task-man
#    container_name: task_celery_beat
#    command: celery -A task_man beat --loglevel=info
#    volumes:
#      - ./task-man:/app
#    env_file:
#      - .env
#    depends_on:
#      - backend
#      - redis
#      - db

  redis:
    image: redis:7
    container_name: task_redis
    ports:
      - "6378:6379"

  db:
    image: postgres:15
    container_name: task_db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env

  frontend:
    build: ./task-man-front
#    command: sh -c "npm install --legacy-peer-deps && npm run build && npm start"
    container_name: task_frontend
#    volumes:
#      - ./task-man-front:/app
    ports:
      - "3000:3000"
    environment:
      NEXT_PUBLIC_API_URL: http://127.0.0.1:8000/api
      API_URL: http://backend:8000/api
    depends_on:
      - backend

volumes:
  postgres_data:
    driver: local
